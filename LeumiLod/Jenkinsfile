pipeline {
    agent any

    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Setup') {
            steps {
                script {
                    sh '''
                    # Create necessary directories
                    mkdir -p /var/jenkins_home/workspace/BankLeumiApp/docker
                    mkdir -p /var/jenkins_home/workspace/BankLeumiApp/kubectl

                    # Download Docker
                    curl -L https://download.docker.com/linux/static/stable/x86_64/docker-20.10.12.tgz -o docker.tgz
                    tar xz -C /var/jenkins_home/workspace/BankLeumiApp/docker --strip-components=1
                    rm docker.tgz

                    # Download kubectl
                    curl -L -o /var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl https://dl.k8s.io/release/v1.27.0/bin/linux/amd64/kubectl
                    chmod +x /var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            when {
                expression { return fileExists('/var/jenkins_home/workspace/BankLeumiApp/docker/docker') }
            }
            steps {
                script {
                    sh '''
                    # Build Docker image (assuming Dockerfile is in workspace)
                    /var/jenkins_home/workspace/BankLeumiApp/docker/docker build -t my-image:latest .
                    '''
                }
            }
        }

        stage('Start Minikube') {
            when {
                expression { return fileExists('/var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl') }
            }
            steps {
                script {
                    sh '''
                    # Start Minikube
                    /var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl start --driver=docker
                    '''
                }
            }
        }

        stage('Deploy to Minikube') {
            when {
                expression { return fileExists('/var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl') }
            }
            steps {
                script {
                    sh '''
                    # Deploy application to Minikube
                    /var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl apply -f deployment.yaml
                    '''
                }
            }
        }

        stage('Expose Service') {
            when {
                expression { return fileExists('/var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl') }
            }
            steps {
                script {
                    sh '''
                    # Expose service
                    /var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl expose deployment my-deployment --type=LoadBalancer --name=my-service
                    '''
                }
            }
        }

        stage('Declarative: Post Actions') {
            steps {
                cleanWs()
            }
        }
    }
}
