pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'flask-app:latest'
        KUBE_CONTEXT = 'minikube'
    }
    
    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'cd LeumiLod && docker build -t ${DOCKER_IMAGE} .'
                }
            }
        }
        
        stage('Setup Minikube') {
            steps {
                script {
                    sh 'minikube start --driver=docker --force'
                }
            }
        }
        
        stage('Deploy to Minikube') {
            steps {
                script {
                    sh '''
                    kubectl create deployment flask-app --image=${DOCKER_IMAGE}
                    kubectl expose deployment flask-app --type=LoadBalancer --port=443 --target-port=5000
                    '''
                }
            }
        }
        
        stage('Access Application') {
            steps {
                script {
                    sh '''
                    minikube tunnel &
                    sleep 10
                    kubectl get services
                    '''
                }
            }
        }
    }
}
