pipeline {
    agent any

    environment {
        MINIKUBE_VERSION = 'v1.29.0'  // Set your desired Minikube version
        KUBECTL_VERSION = 'v1.26.0'   // Set your desired kubectl version
        DOCKER_VERSION = '20.10.24'   // Set your desired Docker version
        PATH = "$HOME/.local/bin:$PATH"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    sh '''
                        # Install Minikube in user space
                        curl -LO https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64
                        mkdir -p $HOME/.local/bin
                        mv minikube-linux-amd64 $HOME/.local/bin/minikube
                        chmod +x $HOME/.local/bin/minikube

                        # Install kubectl in user space
                        curl -LO https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
                        mv kubectl $HOME/.local/bin/kubectl
                        chmod +x $HOME/.local/bin/kubectl

                        # Install Docker in user space (requires Docker's `docker` binary to be available)
                        curl -LO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz
                        tar xzvf docker-${DOCKER_VERSION}.tgz
                        mv docker/* $HOME/.local/bin/
                        
                        # Verify installations
                        minikube version
                        kubectl version --client
                        docker --version
                    '''
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh '''
                        # Build Docker image
                        docker build -t my-app:latest .
                    '''
                }
            }
        }
        stage('Deploy to Minikube') {
            steps {
                script {
                    sh '''
                        # Start Minikube
                        minikube start --driver=docker

                        # Deploy the Docker image to Minikube
                        kubectl apply -f k8s/deployment.yaml
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
