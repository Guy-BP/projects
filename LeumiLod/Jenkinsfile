pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Setup Docker and Minikube') {
            steps {
                script {
                    // Start Minikube if not already running
                    sh 'minikube start || echo "Minikube already running"'

                    // Use Minikube's Docker daemon
                    sh 'eval $(minikube docker-env)'

                    // Verify Docker installation
                    sh 'docker --version'
                    sh 'docker run hello-world'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image using Minikube's Docker daemon
                    sh 'docker build -t my-image:latest .'
                }
            }
        }

        stage('Deploy to Minikube') {
            steps {
                script {
                    // Deploy to Minikube with inline kubectl commands (no external YAML files)
                    sh '''
                    kubectl create deployment my-deployment --image=my-image:latest || kubectl set image deployment/my-deployment my-deployment=my-image:latest

                    # Expose the deployment on port 443 using NodePort, but map it to localhost
                    kubectl expose deployment my-deployment --type=NodePort --port=443 --target-port=443

                    # Patch the service to force it to use a specific NodePort (e.g., 30443)
                    kubectl patch service my-deployment -p '{"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":443,"nodePort":30443}]}}'
                    '''
                }
            }
        }

        stage('Access Application Locally') {
            steps {
                script {
                    // Forward port 443 from the NodePort to localhost:443
                    sh 'kubectl port-forward svc/my-deployment 443:30443 &'
                    
                    // Give port-forward some time to establish
                    sleep 10
                    echo 'You can access the application on https://localhost:443'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
