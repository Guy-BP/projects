pipeline {
    agent any

    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Setup') {
            steps {
                script {
                    // Create necessary directories
                    sh 'mkdir -p /var/jenkins_home/workspace/BankLeumiApp/docker'
                    sh 'mkdir -p /var/jenkins_home/workspace/BankLeumiApp/kubectl'
                    
                    // Download Docker
                    def dockerUrl = 'https://download.docker.com/linux/static/stable/x86_64/docker-20.10.12.tgz'
                    def dockerFile = '/var/jenkins_home/workspace/BankLeumiApp/docker/docker.tgz'
                    sh "curl -L ${dockerUrl} -o ${dockerFile} || { echo 'Failed to download Docker'; exit 1; }"
                    
                    // Extract Docker
                    sh "tar xz -C /var/jenkins_home/workspace/BankLeumiApp/docker --strip-components=1 -f ${dockerFile} || { echo 'Failed to extract Docker'; exit 1; }"
                    
                    // Remove tar file
                    sh "rm ${dockerFile}"
                    
                    // Download kubectl
                    def kubectlUrl = 'https://dl.k8s.io/release/v1.27.0/bin/linux/amd64/kubectl'
                    def kubectlFile = '/var/jenkins_home/workspace/BankLeumiApp/kubectl/kubectl'
                    sh """
                    curl -LO ${kubectlUrl} || { echo 'Failed to download kubectl'; exit 1; }
                    mv kubectl ${kubectlFile} || { echo 'Failed to move kubectl'; exit 1; }
                    chmod +x ${kubectlFile} || { echo 'Failed to make kubectl executable'; exit 1; }
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                // Add your Docker image build steps here
                echo 'Building Docker image...'
            }
        }

        stage('Start Minikube') {
            steps {
                // Add your Minikube start steps here
                echo 'Starting Minikube...'
            }
        }

        stage('Deploy to Minikube') {
            steps {
                // Add your deployment steps here
                echo 'Deploying to Minikube...'
            }
        }

        stage('Expose Service') {
            steps {
                // Add your service expose steps here
                echo 'Exposing service...'
            }
        }

        stage('Declarative: Post Actions') {
            steps {
                cleanWs()
            }
        }
    }

    post {
        always {
            // Actions to run after the pipeline completes, regardless of success or failure
            echo 'Pipeline completed.'
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
